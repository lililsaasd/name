装机：
克隆虚拟机
clone-vm7

改主机名
hostnamectl set-hostname 新主机名

添加ip地址
nmcli connection modify eth0 ipv4.method manual ipv4.addresses IP地址/24 connection.autoconnect yes

激活网卡
nmcli connection up eth0

配置网络yum需要：
开启真机防火墙，并设置开机自起
]#systemctl start firewalld
]#systemctl enable firewalld
关闭真机防火墙
]#firewall-cmd --set-default-zone=trusted

装mysql的包
]#tar -xf mysql-5.7.17-1.el7.x86_64.rpm-bundle.tar

这两个包是错的，需要删除.
mysql-community-server-minimal-5.7.17-1.el7.x86_64.rpm
mysql-community-test-5.7.17-1.el7.x86_64.rpm

]#rm -rf mysql-community-server-minimal-5.7.17-1.el7.x86_64.rpm
]#rm -rf mysql-community-test-5.7.17-1.el7.x86_64.rpm

重新传一个mysql-community-test-5.7.17-1.el7.x86_64.rpm软件包

]#yum  -y  install  perl-JSON            需要装的依赖包
]#rpm  -Uvh  mysql-community-*.rpm
]#rpm  -qa  |  grep  -i   mysql
]#systemctl   start   mysqld

查询初始密码
]#grep  password  /var/log/mysqld.log

用初始密码登录
]#mysql -hlocalhost -uroot -p'初始密码'
mysql> set global validate_password_policy=0; 
mysql> set global validate_password_length=6;
mysql> alter user root@"localhost" identified by "123456";

更改配置文件
]#vim /etc/my.cnf
[mysqld]
validate_password_policy=0     是否检测密码
validate_password_length=6     设置密码长度
保存退出
]#systemctl start mysqld
]#mysql -uroot -p123456;
mysql>quit;

数据库就完成了！


部署mysql高可用集群（第三方软件MHA+主从同步）

集群：使用多台服务器提供相同的服务（如51-55）

高可用集群：主备模式 当主角色的主机宕机后，备用的主机自动接替主角色的主机提供服务给客户端。

client mysql -h192.168.4.52 -uadmin -p123456

56 监控服务

vip地址 192.168.4.100

vip
主             备用主     备用主     
   51            52          53           54            55         56
master  slave   slave   slave   slave   监控


一、配置所有数据节点主机之间可以互相以ssh密钥对方式认证登陆
ssh-keygen
ssh-copy-id root@ip地址

二、配置manager56主机 无密码ssh登录 所有数据节点主机
ssh-keygen
ssh-copy-id root@ip地址

三、配置主从同步,要求如下：
51 主库		    开半同步复制
52 从库（备用主库）  开半同步复制
53 从库（备用主库）  开半同步复制
54 从库 不做备用主库所以不用开半同步复制 
55 从库 不做备用主库所以不用开半同步复制


master51配置：
]# vim  /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;
rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=51
log-bin=master51
binlog-format="mixed"
:wq

]# systemctl  restart mysqld
]# ls /var/lib/mysql/master51.*
]# mysql -uroot -p123456
mysql> grant  replication slave  on  *.*  to repluser@"%"  identified by "123456";
mysql> set global relay_log_purge=off;
mysql> show master status;
mysql> quit;

备用master52的配置
]# vim /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;
rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=52
log-bin=master52
binlog-format="mixed"

]# systemctl restart mysqld
]# ls /var/lib/mysql/master52.*
]# mysql  -uroot  -p123456
mysql> grant  replication slave  on  *.*  to repluser@"%"  identified by "123456";
mysql> set global relay_log_purge=off;
mysql> change master to 
    -> master_host="192.168.4.51",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=441;
mysql> start slave;
mysql> show slave status\G;
]# mysql -uroot -p123456 -e "show slave status\G"  | grep -i YES

备用master53的配置
]#vim /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;
rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=53
log-bin=master53
binlog-format="mixed"
:wq
]# systemctl  restart mysqld
]# ls /var/lib/mysql/master53.*
]# mysql -uroot -p123456
mysql> grant  replication slave  on  *.*  to repluser@"%"  identified by "123456";
mysql> set global relay_log_purge=off;
mysql> change master to 
    -> master_host="192.168.4.51",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=441;
mysql> start slave;
mysql> show slave status\G;
]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes

配置从服务器54
]# vim /etc/my.cnf
[mysqld]
server_id=54
:wq
]# systemctl  restart mysqld
]# mysql -uroot -p123456
mysql> set global relay_log_purge=off;
mysql> change master to 
    -> master_host="192.168.4.51",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=441;
mysql> start slave;
mysql> show slave status\G;
]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes

配置从服务器55
]# vim /etc/my.cnf
[mysqld]
server_id=55
:wq
]# systemctl  restart mysqld
]# mysql -uroot -p123456
mysql> set global relay_log_purge=off;
mysql> change master to 
    -> master_host="192.168.4.51",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=441;
mysql> start slave;
mysql> show slave status\G;
]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes


在客户端测试主从同步配置

在主库51上添加访问数据的授权用户
]# mysql -uroot -p123456
mysql> grant all on  gamedb.* to admin@"%" identified by "123456";
mysql> create database gamedb;
mysql> create table  gamedb.t1 (id int);
mysql> insert into gamedb.t1 values(999);
mysql> insert into gamedb.t1 values(999);
mysql> select  * from gamedb.t1;

在客户端使用授权用户连接从库52-55,也能看到同样的库表及记录
]# mysql -h从库IP地址 -uadmin -p123456
mysql> select  * from gamedb.t1;

在所有主机上安装perl软件包 （51~56）
]#unzip mha-soft-student.zip
]# cd  mha-soft-student
]# yum -y  install  perl-*.rpm

在所有主机上安装mha_node软件包 （51~56）
]#yum -y install perl-DBD-mysql
]#rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm

只在管理 "主机56" 上安装mha_manager软件包
]# yum -y install perl-ExtUtils-* perl-CPAN*
]#tar -zxvf  mha4mysql-manager-0.56.tar.gz
]#cd mha4mysql-manager-0.56
]#perl Makefile.PL  
]#make
]#make install

检查配置环境
在主机51 52  53  检查是否有同步数据的用户 repluser 
mysql>show grants for repluser@"%";


在主机51~55 做如下授权
]# mysql -uroot -p123456
mysql>grant all on *.* to root@"%"  identified by "123456";



在56上操作

创建工作目录 和主配置文件
]#cd mha-soft-student
]# mkdir /etc/mha_manager/
]#cp mha4mysql-manager-0.56/samples/conf/app1.cnf  /etc/mha_manager/
vim /etc/mha_manager/app1.cnf
[server default]
manager_workdir=/etc/mha_manager
manager_log=/etc/mha_manager/manager.log
master_ip_failover_script=/etc/mha_manager/master_ip_failover

ssh_user=root
ssh_port=22

repl_user=repluser
repl_password=123456

user=root
password=123456

[server1]
hostname=192.168.4.51
candidate_master=1

[server2]
hostname=192.168.4.52
candidate_master=1

[server3]
hostname=192.168.4.53
candidate_master=1

[server4]
hostname=192.168.4.54
no_master=1

[server5]
hostname=192.168.4.55
no_master=1

保存退出
创建故障切换脚本(这步有个脚本可以直接考进来)
cp mha4mysql-manager-0.56/samples/scripts/master_ip_failover /usr/local/bin/

cp mha4mysql-manager-0.56/samples/scripts/master_ip_failover /etc/mha_manager/
vim /etc/mha_manager/master_ip_failover
#!/usr/bin/env perl

#  Copyright (C) 2011 DeNA Co.,Ltd.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by：
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This progrchange master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;am is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#  Foundationchange master to master_host="192.168.4.9master91.0000022",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

## Note: This is a sample script and is not complete. Modify the script based on your environment.

use strict;
use warnings FATAL => 'all';

use Getopt::Long;
use MHA::DBHelper;

my (
  $command,        $ssh_user,         $orig_master_host,
  $orig_master_ip, $orig_master_port, $new_master_host,
  $new_master_ip,  $new_master_port,  $new_master_user,
  $new_master_password
);

my $vip = '192.168.4.60/24';  # Virtual IP 
my $key = "1"; 
my $ssh_start_vip = "/sbin/ifconfig eth0:$key $vip";
my $ssh_stop_change master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;vip = "/sbin/ifconfig eth0:$key down";

GetOptions(
  'command=s'             => \$command,
  'ssh_user=s'            => \$ssh_user,
  'orig_master_host=s'    => \$orig_master_host,
  'orig_master_ip=s'      => \$orig_master_ip,
  'orig_master_port=i'    => \$orig_master_port,
  'new_master_host=s'     => \$new_master_host,
  'new_master_ip=s'       => \$new_master_ip,
  'new_master_port=i'     => \$new_master_port,
  'new_master_user=s'     => \$new_master_user,
  'new_master_password=s' => \$new_master_password,
);change master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;

exit &main();
master91.000002
sub main {
  if ( $command eq "stop" || $command eq "stopssh" ) {

    # $orig_master_host, $orig_master_ip, $orig_master_port are passed.
    # If you manage master ip address at global catalog database,
    # invalidate orig_master_ip here.
    my $exit_change master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;code = 1;
    eval {

      # updating global catalog, etc
      &stop_vip();
      $exit_code = 0;
    };
    if ($@) {
      warn "Got Error: $@\n";
      exit $exit_code;
    }
    exit $exit_code;
  }
  elsif ( $command eq "start" ) {

    # all argchange master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;uments are passed.
    # If you manage master ip address at global catalog database,
    # activate new_master_ip here.
    # You can also grantmaster91.000002 write access (create user, set read_only=0, etc) here.
    my $exit_code = 10;
    eval {
      my $new_master_handler = new MHA::DBHelper();

      # args: hostname, port, user, password, raise_error_or_not
      $new_master_handler->connect( $new_masterchange master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;_ip, $new_master_port,
        $new_master_user, $new_master_password, 1 );

      ## Set read_only=0 on the new master
      $new_master_handler->disable_log_bin_local();
      print "Set read_only=0 on the new master.\n";
      $new_master_handler->disable_read_only();

      ## Creating an app user on the new master
      print "Creating app user on the new master..\n";
      $new_master_handler->enable_log_bin_local();
      $new_master_handler->disconnect();
change master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;
      ## Update master ip on the catalog database, etc
      &start_vip();
      $exit_code = 0;
    };
    if ($@) {
      warn $@;

      # If you want to continue failover, exit 10.
      exit $exit_code;
    }
    exit $exit_code;
  }
  elsif ( $command eq "status" ) {
change master to master_host="192.168.4.92",master_user="repluser",master_password="123456",master_log_file="master92.000002",master_log_pos=721;
    # do nothing
    exit 0;
  }
  else {
    &usage();
    exit 1;
  }
}
sub start_vip() {
    `ssh $ssh_user\@$new_master_host \" $ssh_start_vip \"`;
}
sub stop_vip() {
    return 0 unless ($ssh_user);
    `ssh $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`;
}

sub usage {
  print
"Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n";
}
保存退出

cd /etc/mha_manager
加个执行权限
chmod +x  master_ip_failover

验证配置
验证ssh 免密码change master to 
]# masterha_check_ssh --conf=/etc/mha_manager/app1.cnf

验证 数据节点的主从同步配置（要不调用故障切换脚本）
]# masterha_check_repl --conf=/etc/mha_manager/app1.cnf

测试高可用集群配置
192.168.4.60中的60是master_ip_failover脚本中的ip
在主库上手动部署vip 地址   192.168.4.60
]# ifconfig  eth0:1 192.168.4.60/24
]# ifconfig  eth0:1

96上启动管理服务，并查看服务状态
]# masterha_manager --conf=/etc/mha_manager/app1.cnf --remove_dead_master_conf --ignore_last_failover

开一个新端口
]# masterha_check_status --conf=/etc/mha_manager/app1.cnf

测试故障转移
在主库51 上执行  ]# systemctl stop mysqld  
要修复
先起数据库服务
]# systemctl start mysqld


进51 把51设为52的从库
]#mysql -uroot -p123456
mysql> change master to
    -> master_host="192.168.4.52",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master52.000001",
    -> master_log_pos=154;
mysql> start slave;
mysql> show slave status\G;


进56的配置文件
]#vim /etc/mha_manager/app1.cnf  添加server1

验证 数据节点的主从同步配置（要不调用故障切换脚本）
]# masterha_check_repl --conf=/etc/mha_manager/app1.cnf

执行
]#masterha_manager --conf=/etc/mha_manager/app1.cnf --remove_dead_master_conf --ignore_last_failover

开一个新端口
]# masterha_check_status --conf=/etc/mha_manager/app1.cnf

在52 本机查看是否获取vip地址
]# ip addr  show  | grep  192.168.4

客户端(真机)连接vip地址 ，访问数据服务
]#mysql -h192.168.4.60 -uadmin -p123456




弄错了，要重新弄，删文件(从库中操作)
]#cd /var/lib/mysql
]#rm -rf master.info
]#rm -rf relay-log.info
]#rm -rf db52-relay-bin.*
]#rm -rf master53.*
重启数据库服务
]#systemctl restart mysqld

停从库
mysql>stop slave;


mysql>reset slave



